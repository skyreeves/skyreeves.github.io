[{"title":"我的假期批下来了","path":"/post/1e73f129.html","content":"2020年初新冠疫情的突然出现，使我的工作模式产生了变化，开始以为只是暂时性的。可随着疫情的反复无常，这种不自由的工作模式似乎已经成为常态化。 导致我对于假期的规划在近三年来成为了自己给自己画的饼。例如拍摄英仙座流星雨的延时🌠，计划了三年，每年都会因为工作的原因没法离开所在省份，而我的所在地每年英仙座流星雨爆发的时候都是雨季。上一次外出拍摄银河还是在去年7月，也仅仅是在周边30公里左右的地方。今年端午节期间，我特意租了索尼原厂14 1.8的镜头，打算到光污染比较小的地方拍摄银河，也因为突发的疫情不能离开所在市区而被迫取消。在拍摄计划泡汤之后，还因为快递停运，镜头寄不回去，在我手里一天就是一天的租金，情况不是比预计的糟糕，而是比预计的还要糟糕！虽然后来跟商家协商免了一部分，可前前后后也花了1000多块，什么也没干，不能哭，要去死。原计划8月份休假，自驾再走一趟318，各种设备器材不管是租还是借，都准备得妥妥当当，甚至找朋友借来了一台大疆悟，打算在拍摄雪山🏔与星空🌃之余再做一个自驾游的Vlog，好巧不巧，在我提交休假申请的时候疫情它又来了，所有休假全部取消。麻了，我真的。对了，我还想起来了，一年前我就计划去广州学习摩托车赛道驾驶，也是因为疫情的原因我不能离开本省，所以一直到现在，我依旧是个菜鸡。时隔三个月，这次提出休假申请终于通过了。可是现在也不是拍银河的季节，这么冷的天也不知道去哪里，也不能离开本省回家，感觉20多天的假期有点白白浪费。可是话说回来，我这休的假期还是休的去年的假，我如果现在再不休，那就真的白白浪费了。本着有便宜不占王八蛋的指导思想，（喂醒醒！那本来就是该你休却没休的假！！）不休白不休，至于在假期干啥，我也不知道。不过这个季节正是冲浪🏄🏻的季节，就祈祷不要再有疫情，那样的话我还可以去巩固一下。对了，我好像还可以去钓鱼🎣，就算钓不到鱼，抓几个螃蟹🦀回家想必也是极好的。","categories":["打胡乱说"]},{"title":"利用 Github 博客仓分支备份博客源文件","path":"/post/a11d9a20.html","content":"别看了，虽然达到了目的，但这文章有很多无用功，不要被我误导。详情直接看评论区前言这两天通过@星日语大佬的Stellar更新&备份教程，总算是把如何以blog仓的子仓方式使用Stellar搞明白了，教程当中有讲到如何通过手动备份与插件备份的方式备份主题文件。因为觉得既然在做备份了，那把整个blog的源文件都备份下来不是更好吗？在以上的教程中学会了git命令的简单运用，于是萌生出一个情景：博客更新后，通过 `hexo d`  部署静态网页，接着通过 `git push` 备份源文件在得知方法是可行的之后，着手把它变成现实，在这里记录下过程。如果你的博客仓是开源的，这样做的话所有人都能拿到你备份的源码，你也不想别人照搬你的网页是吧！具体步骤一、创建备份存储分支1、创建分支在blog所在的github仓创建一个新的分支用于存储备份文件点击blog仓的分支标签 main ，输入需要创建的分支名称，点击 **create branch:BAK** from `main`2、设置默认分支将新建的分支设置为仓库的默认分支进入仓库的设置页面，选择左侧 `Code and automation` 下的 **Branches** ，在右侧你会看到目前的默认分支为 main ，点击后面的 ⇆在弹出窗口下拉菜单里选择刚刚创建的分支，点击Update再弹出的警告里点击 I understand, update the default branch. color:red成功的话顶部会有 Default branch changed to BAK color:blue 提示，也可以在 **Default branch** 里看见默认分支已经被更改。二、clone博客仓库到本地1、clone仓库在你电脑上新建一个文件夹作为博客仓的本地仓库，在终端里进入到这个文件夹并执行：```shellgit clone git@github.com:用户名/仓库名.git```当看到 `Resolving deltas: 100% (xxx/xxx), done.` 即已经克隆成功 ：```shellskyreeves@SkydeMBP ~ % git clone git@github.com:skyreeves/blog.gitCloning into 'blog'...remote: Enumerating objects: 4866, done.remote: Counting objects: 100% (618/618), done.remote: Compressing objects: 100% (176/176), done.remote: Total 4866 (delta 289), reused 543 (delta 219), pack-reused 4248Receiving objects: 100% (4866/4866), 2.13 MiB  920.00 KiB/s, done.Resolving deltas: 100% (2281/2281), done.```> 这一步的clone命令需要ssh秘钥支持，不过既然都搭建好了博客，那秘钥相比已经是没问题的吧~2、调整本地仓文件我们是基于最初的 `main` 分支创建的新的分支并clone到本地的，在本地仓会有静态网页的文件，而静态文件在每次更新博客的时候都会用 `hexo g` 生成，所以不需要备份。首先在克隆仓库的文件夹里把这些静态网页文件全删掉。那为什么不一开始就新建空白分支呢，因为我不会然后去之前博客所在文件夹里，将博客源文件复制过来，可以把所以文件都丢过来，也可以只复制这几个`_config.yml`、`_config.stellar.yml`、`package.json`、`.gitignore`，以及文件夹 `themes/`、`source/`、`scffolds/`> 其中 `.gitignore` 是隐藏文件。windows在文件夹选项里点选  `显示隐藏的文件、文件夹和驱动器` 查看；macos在文件夹里按 ⌘ + shift + .  查看3、取消主题子仓库如果不取消子仓库，是不能将主题文件也备份的。不过不用担心，之前的博客本地文件夹里不做更改，主题有更新的话可以先拉取到原来的地方，再手动复制到这里。在克隆仓库的文件夹里进入 `themes/stellar` ，删掉 `.git ` ，跟上面以 `.` 开头的文件一样，它也是隐藏文件。4、安装组件就跟你搭建hexo博客时候一样的，在我们clone仓的文件夹里需要安装必备的组件，才能在终端里使用相应的命令。进入克隆仓库，在终端里执行这两行命令：npm installnpm install hexo-deployer-git三、使用说明1、更新博客更新博客和以前一样，用 `hexo g -d` 生成静态页面并部署到github上。2、备份源文件备份源文件使用 git push 的三件套： `git add .`、`git commit -m \"备份\"`、`git push origin BAK`> `git push origin BAK` 这里的 **BAK** 是我第一步里创建的分支名，如果跟我不一样则需要改成你自己的分支名备份成功的话终端会显示如下：```shellskyreeves@SkydeMBP blog % git push origin BAKEnumerating objects: 284, done.Counting objects: 100% (284/284), done.Delta compression using up to 8 threadsCompressing objects: 100% (267/267), done.Writing objects: 100% (282/282), 192.37 KiB  735.00 KiB/s, done.Total 282 (delta 17), reused 2 (delta 0), pack-reused 0remote: Resolving deltas: 100% (17/17), completed with 2 local objects.To github.com:skyreeves/blog.git fc47ee1..811b11f  BAK -> BAK```效果展示我们到 github 验证一下，可以看到 main 分支里与以前一样，是部署的静态网页文件： `BAK` 分支里则是备份好的博客源文件：之前的博客文件夹可以弃用了，不过我留着用于获取主题文件的更新。","tags":["Github"]},{"title":"评论板块加载失败的问题","path":"/post/8cd79de0.html","content":"前言自打这个空间站在太空漂流以来从没有旅客造访我也没发现有什么问题今天是个开门红而@星日语一针见血地指出我评论版块加载的问题即因为某种原因，我托管在Vercel上的Waline版块在国内是加载不出来的一直以来没有留言肯定是因为这个大佬也给了解决方式，即给Waline的服务链接套个免费的域名上去> 部署Waline评论系统的萌新教程可以参考hexo博客引入Waline评论模块>正式步骤：一、DNS配置用现有域名的二级域名即可到域名托管里去设置DNS添加一个**CNAME**记录，主机记录自定义，这里以`abc`为例，记录值为cname.vercel-dns.com二、Vercel配置在Vercel里找到评论版的托管服务点击 `Settings-Domains` 输入刚才设置的二级域名点击Add三、Hexo配置打开`blog/themes/hexo-theme-stellar/_config.yml`修改Waline的服务链接为之前设置的域名```yaml _config.ymlcomments: ... waline: ... serverURL: https://abc.skyreeves.cn```然后重新生成网页部署即可感谢@星日语大佬提醒~","tags":["Waline","Vercel"]},{"title":"Stellar主题自定义侧边栏教程「萌新向」","path":"/post/9b8cc433.html","content":"开篇废话在使用大佬@xaoxuu  开发的Stellar Hexo博客主题时，发现大佬的侧边栏不仅简介美观，还巨特娘的实用有木有！原本Stellar使用文档里也有设置教程但是对于本萌来说还是犹如天书不过在本萌的不懈努力下还是攻克了这道难题，记录成了这篇文章具体步骤先看一下大佬的侧边栏:这里的侧边栏由3部分组成- 分组 color:red- 折叠标签组 color:cyan- 折叠标签 color:green我们遇到的第一个难题就是如何设置分组名为了方便展示，以下以本站的便笺页面为例进行讲解创建分组在`source/_data/projects.yml`中增加一个项目：```ymlNotes: title: 便笺 description: index: false # 不在wiki列表中索引这个项目 sidebar: [toc] tags: 笔记 sections: 'Hexo笔记': [100, 199] '游戏': [200, 299]```最后**sections**下的**Hexo笔记**和**游戏**便是我创建的分组后面的区间值用于指定页面归属哪一个分区，在后面会讲你有多少分组就写多少条，后面给不同的区间就行> 注意：>> 在本站主题配置文件`_config.yml`里，便笺页面是以notes表示的>> ```yml> sidebar:> ...> menu:> post: '主页'> notes: '便笺'> about: '关于'> ```>> 所以上面增加的控制项是Notes>> 如果你是在其他页面编辑侧边栏>> 需要根据你自己的页面设置新增项的名称第二个问题创建折叠标签侧边栏里的折叠标签其实可以把他们理解为一篇文章折叠标签就是文章的标题标签展开后则是文章的分段目录所以创建一个折叠标签其实就是写一篇文章而已在`scurce/notes/`目录下新建一个文件夹，文件夹名称随意，只要你自己能分清楚就行> 与上一步创建分组时一样，根据你自己的页面在对应的文件夹下操作再在文件夹里创建一个`index.md`文件如下图所示：我这里就是在`notes`下新建了一个`站点美化`文件夹再在里面创建`index.md`我们可以看到这就是一篇md格式的文章关键在于编辑`index.md`文件：```yml---menu_id: noteslayout: wikiwiki: Notesbreadcrumb: falsetitle: 站点美化order: 101comments: false---```这里**title**的值就是页面最终呈现的折叠标签名，本例中即为**站点美化**标签归组接着说上面编辑的内容**order**的值的作用就是将它定义到上个步骤里创建的分组里比如上一步我在`source/_data/projects.yml`将[100,199]这个区间赋予给了**Hexo笔记**，我这里的order的值是101，在100至199这个区间内，所以页面最终的效果就是把**站点美化**归类到**Hexo笔记**这个分组下，如下图：至此一个折叠标签做好了至于`index.md`里除了title和order外的其他项- **layout** 的值固定为wiki，与第二项一同作用于侧边栏，如果没有它们侧边栏也会消失- **wiki** 的值写你在`source/_data/projects.yml`中新增的项目名- **breadcrumb: false** 表示本页面不显示顶部导航，如果你需要显示的话，把这一行删除即可- **comments: false** 表示本页面不启用评论版块，需要启用评论板块的话把值改成**true**创建多个分组与多个折叠标签组当我们需要在侧边栏里写入多个折叠标签时则与上一步一样，在`scurce/notes/`目录下再新建一个文件夹> 再说一次，这是以本站的便笺页为例在操作，实际需要根据你自己的页面在对应的文件夹下进行里面再新建一个`index.md`文件通过给**title**和**order**不同的值来实现不同的标签名和分组比如我在另一个文件夹里创建了一个新的`index.md`文件，title我定为博主游玩推荐，order值定为201，则最终在页面的效果就是一个名为**博主游玩推荐**的标签位于**游戏**分组下题外话这里我们讨论的是在便笺页面里的侧边栏设置那要是我连便笺页都没有怎么办在blog所在的文件夹终端里执行：```shellhexo new page  \"notes\"```这会在`scurce`目录下创建 `notes` 文件夹，页面内容可以在里面的的 `index.md` 里编辑 然后在主题配置文件里将 `sidebar.menu.notes` 的注释取消掉，例如：```yamlsidebar: menu: post: '主页' notes: '便笺'```最终页面文件的构成如下：在红框的index.md文件 color:red里编辑便笺主页内容在蓝框的index.md文件 color:cyan里编辑**Hexo笔记**分组下的**站点美化**页在绿框的index.md文件 color:green里编辑**游戏**分组里的**博主游玩推荐**页","tags":["Stellar"]},{"title":"跳蛛饲养入门问答篇","path":"/post/eefa4f8b.html","content":"# 入门问答篇\n\n## 1.龄/L是什么意思？多久能长到成体啊？成体最大能长多大啊？\n\n答：龄不是几岁的意思，是数蜕皮次数，卵是1龄，可以出售的能自理的跳蛛最小一般是3龄，从3龄到成体需要5-8个月左右，根据喂食频率和温度高低有所变化，公比母成体稍快，寿命也短一些（较恰当的温度范围：15°~28°，稍微高点低点也没事，别那么怕）灰佛成体最大1-3cm，橙佛成体最大1-2.5cm，不排除有长的更大的个体~\n\n## 2.好不好饲养呀？饲养都要注意哪些？会不会好麻烦？\n\n答：跳蛛相对于其他爬宠来说好饲养很多，也很简单方便，放在室内书桌，办公桌，即可，只要注意几点：\n\n- 保证饲养盒内有3只左右的活体食物，它自己饿了会自己去吃，吃饱了就不会吃了，不用固定时间投喂；\n- 注意温度不要低手5°不要高于35°，适宜的温度在15-28°，放在室内阴凉的环境下即可；\n\n- 关于湿度，只需要在饲养盒里面捏一小团湿纸巾进去即可，简单方便，等干了再换一个即可。\n\n  是不是很简单~\n\n## 3.它吃什么啊？几天喂一次？一次喂多少？\n\n答：从可以人工饲养获得的常见饲料范围内举例。\n\n- 3龄：小果蝇/跳虫/幼体黄粉虫（效果不如小果）\n- 4龄：小果蝇，大果蝇，小小樱桃蟑螂\n- 5龄：小果蝇，大果蝇，小樱桃蟑螂，小蛐蛐儿，九龙虫幼虫\n\n喂食频率的话建议两三天一喂，保证饲养盒内食物足够，越小的跳蛛越不抗饿，但是都不要饿过一周。一次喂多少要看跳蛛体型，不过它不会把自己撑死，放心～\n\n## 4.跳蛛会咬人么？有毒么？\n\n答：蜘蛛几乎都有毒性，只是毒性强弱不同，跳蛛相对人来说较弱，和蚊子一样，且跳蛛不会主动攻击人，只要不把它弄疼，不要用提的方式，用慢慢赶的方式就好。\n\n（跳蛛：我都不知道自己会咬人，我要把人麻醉把他吸干哈哈哈～）\n\n## 5 . 我的跳蛛怎么这么小？能不能分公母？\n\n答：3龄跳蛛很小很小，只有2毫米，3龄需要无翅小果蝇那样大小的猎物，4龄开始可以捕捉大果蝇，也仅有3毫米，成体2厘米左右。\n\n至手分公母，个人感觉至少7龄才能分的准确，因为这个时候无论花纹还是牙齿颜色都比较稳定了，公的牙齿强光照射是绿色，母的则是紫or金，例子是橙佛，到这个大小也都是橙色，亚成时公的体色会转为黑白。\n\n> 靠牙齿颜色来区分公母并不绝对，比如灰佛就有绿牙母。这个时候可以靠体态来区分，一般公的跳蛛都是瘦小，母的比较丰满圆润。\n\n## 6.咋喂水？几天喂一回？\n\n答：有购买专业饲养盒的小伙伴只需要在离心管内塞入一团纸巾或者棉花往里面加水即可哦~没有专业饲养盒的话用小喷壶喷，喷一点就行，湿度太大了不好，蜕皮期间一定记得喷水，喷网上也没事儿，别怕。喷水频率北方干燥两天一次，南方3天甚至只有蜕皮期问补水，实在怕掌握不好就往里扔个温纸团。\n\n> 切记，不得高温的情况下还高湿，会被蒸桑拿蒸死！\n\n## 7.它怎么躲在网里不出来呢？也不吃东西？\n\n答：只是它的生活习性吃饱了想睡觉（肚子比头大说明它吃饱了，要是肚子比头小，那就是饿了）或者它是要蜕皮了。\n\n一般蜕皮流程：前一到两天拒食＋织厚网 一 躲在网里两到四天（这个期问保持温度加水即可）一 正在蜕皮 一 再歇一会儿一出来溜达\n\n## 8.看我买的盒子！好不好看！能用它养吗？\n\n答：盒子要结合跳蛛本身的大小来使用，如果太大，你找不到蛛，蛛找不到饭。。。而且跳蛛盒子需要倒放,除非你喜欢拆它家，它的网会织在高处，织网需要体力~\n\n## 9.跳蛛是不是爱晒太阳呀？\n\n答：可以晒，但是不能暴晒，也不能晒太久，如果想晒太阳的话，一定要在盒子里准备一个可以遮阳的地方，比如一根足以挡住跳蛛的树枝。苗子最好不要晒，不晒不会出问题，晒了不一定不出问题。","tags":["跳蛛"]},{"title":"hexo博客引入Waline评论模块","path":"/post/69ee63d6.html","content":"Waline一款简洁、安全的评论系统。完全的 Markdown 支持，同时包含表情、数学公式、HTML 嵌入。支持账号注册，保持身份，同时支持匿名回复。最主要的是部署简单，并且可以免费部署在 Vercel 上。一、配置数据库Waline是一位大佬在 Valine 的基础之上开发的，跟Valine一样支持LeanCloud作为数据存储。1、注册LeanCloudLeanCloud分国内版和国际版，因为国内版需要绑定已经备案的域名，多一事不如少一事的原则，我们点这里注册一个LeanCloud**国际版**账号。2、创建应用之后在应用里点击**创建应用**应用名称随意填应用计价方式选择**开发版**，点击**创建**。3、获取应用凭证然后点应用右下角的 ⚙ 进入设置菜单点击左侧边栏的**应用凭证**获取**AppID**、**AppKey**以及**MasterKey**这三个值在之后的服务端配置环境变量中使用二、创建服务端我们选择既简单访问又快还能白嫖的Vercel1、创建服务端仓库点击这里选择用Github快速连接然后在Create Git Repository放块里选择**Github**创建一个仓库当你的屏幕放起彩带烟花，表明已经构建完成2、配置环境变量点击右上角的**Continue to Dashboard**选择**Settings** - **Environment Variable**需要配置的环境变量与第一步里获取的应用凭证对应： Environment Variable   Lean Cloud   :------------------:  :----------:  LEAN_ID  AppID  LEAN_KEY  AppKey  LEAN_MASTER_KEY   MasterKey  LEAN_SERVER  已备案的域名 > LeanCloud国际版只需配置前三项，国内版需要额外配置第四项LEAN_SERVER然后点顶部的**Deployments**在刚才创建的服务上选择**Redeploy**重新部署等部署好之后记下**DOMAINS**的地址在hexo配置文件中要用三、hexo站点配置我使用的是Stellar主题需要编辑主题的配置文件 `theme/stellar/_config.yml` 下的 `comments.service` 和 `comments.waline.serverURL` .可以在博客的根目录里创建一个 `_config.stellar.yml` ,将所有对 `theme/stellar/_config.yml` 的更改写在里面，这样即便更新主题后也不用重新写配置文件。```yaml blog/_config.stellar.ymlcomments: service: waline waline: \tserverURL: 上一步获得的DOMAINS地址```之后重新部署hexo即可四、注册管理员Waline支持评论管理，默认第一个注册的用户为管理员可以直接访问上面获取的**DOMAINS**地址也可以打开你的站点，在评论板块点**登录**此时就可以注册啦，也可以用微博、Github、Twitter、Facebook快速连接五、评论通知当网站有用户发布评论或者用户回复评论时，Waline 支持对博主和回复评论作者进行通知。1、微信通知child:codeblock  因为每天只能白嫖5次提醒于是弃用了点这里申请 `Server` 酱提供的Token，需要回到Vercel，去配置以下几个环境变量： 环境变量  值  ------------  ------------------------------------------------------------  SC_KEY  Server 酱提供的 Token  AUTHOR_EMAIL  你的邮箱，用来区分发布的评论是否是博主本身发布的。如果是博主发布的则不进行提醒通知  SITE_NAME  网站名称，用于在消息中显示  SITE_URL  网站地址，用于在消息中显示 2、邮件通知邮件通知的优势是无提醒次数的限制，并且如果访客在评论时填写了邮箱，那么访客也会在第一时间收到消息提醒，避免垃圾邮件也避免影响自己正常的邮件，建议注册一个新的邮箱专门用于发送提醒邮件。在Vercel的里新增环境变量如下( `#` 为选填项)： 环境变量  值  :------------------  :-----------------------------------------------------------  SITE_URL  你站点的链接。  AUTHOR_EMAIL  你的邮箱，用来接收新评论通知。同时如果是你自己发布的评论则不会收到提醒通知。  SITE_NAME  你站点的名称  MAIL_SUBJECT  `#`自定义评论回复邮件标题  MAIL_TEMPLATE  `#`自定义评论回复邮件内容  MAIL_SUBJECT_ADMIN   `#`自定义新评论通知邮件标题  MAIL_TEMPLATE_ADMIN  `#`自定义新评论通知邮件内容  SMTP_SERVICE  SMTP 邮件发送服务提供商，点这里查看所以支持的服务商。  SMTP_SECURE  是否使用 SSL 连接 SMTP，上面的服务商清单里看，如果有这一项则填写 `true` ，没有的就不用配置这一项  SMTP_USER  SMTP 邮件发送服务的用户名，一般为登录邮箱  SMTP_PASS  SMTP 邮件发送服务的密码，一般为邮箱登录密码，部分邮箱(例如 163)是单独的 SMTP 密码。  SENDER_EMAIL  `#`自定义发送邮件的邮箱地址，与 `SMTP_USER` 一致  SENDER_NAME  `#` 收到提醒时显示的发件人名称 > 1、其中 `MAIL_SUBJECT` 、 `MAIL_TEMPLATE` 、 `MAIL_SUBJECT_ADMIN` 、 `MAIL_TEMPLATE_ADMIN` 这几项可参考 SaraKale's blog 的邮件模板。因为Vercel的环境变量最大仅支持4kb，如果你的环境变量写得很长超出了限制怎么办，那么这几个环境变量可以不配置，直接将它们写进代码里：在 `Github` 仓的根目录下找到 `index.js`，修改其内容为：>> child:codeblock 这里以官方默认的邮件模板为例>> ```js> const Application = require('@waline/vercel');> > module.exports = Application({> mailSubject: '{{parent.nick}}，您在博客「{{site.name}}」上的评论收到了回复',> mailTemplate: `> <div style=\"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;\">> <h2 style=\"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;\"> > 您在博客<a style=\"text-decoration:none;color: #12ADDB;\" href=\"{{site.url}}\" target=\"_blank\">{{site.name}}</a>上的评论有了新的回复> </h2>> <div style=\"padding:0 12px 0 12px;margin-top:18px\">> \t\t<p>{{parent.nick}}，您曾发表评论：</p>> <div style=\"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;\">{{parent.comment  safe}}</div>> <p><strong>{{self.nick}}</strong> 回复说：</p>> <div style=\"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;\">{{self.comment  safe}}</div>> <p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"{{site.postUrl}}\" target=\"_blank\">前往原文查看完整的回复內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"{{site.url}}\" target=\"_blank\">{{site.name}}</a>。</p>> <br/>> </div>> <div style=\"border-top:1px solid #DDD; padding:13px 0 0 8px;\">> \t\t该邮件为系统自动发送的邮件，请勿直接回复。> </div>> <br/>> </div>`,> mailSubjectAdmin: '您的博客「{{site.name}}」收到了新评论',> mailTemplateAdmin: `> <div style=\"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;\">> <h2 style=\"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;\"> > 有人在<a style=\"text-decoration:none;color: #12ADDB;\" href=\"{{site.url}}\" target=\"_blank\">{{site.name}}</a>发表了新的评论> </h2>> <div style=\"padding:0 12px 0 12px;margin-top:18px\">> \t\t<p><strong>{{self.nick}}</strong> 评论说：</p>> \t\t<div style=\"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;\">{{self.comment  safe}}</div>> <p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"{{site.postUrl}}\" target=\"_blank\">前往原文查看完整的评论内容。</a></p>> <br/>> </div>> <div style=\"border-top:1px solid #DDD; padding:13px 0 0 8px;\">> \t\t该邮件为系统自动发送的邮件，请勿直接回复。> </div>> <br/>> </div>`> });> ```>>  >> 2、`SMTP_SERVICE` 则填写服务商名称就行，比我使用的163的邮箱来发送消息提醒，而在支持的服务商清单里是有 `163` 的，所以我这一项的值写 `163` 就行。如果你使用的邮箱没有在支持的清单里，则需要配置 `SMTP_HOST` 、和 `SMTP_PORT` 。color:error 注意：任何环境变量的变动，都需要重新部署后才会生效。其次，如果设置了多种提醒方式，仅会有一种生效！Waline还支持其他通知方式，见详情六、客制化1、自定义表情Stellar主题的配置文件里默认是将表情注释掉的，在 `_config.stellar.yml` 里的 `comments.waline` 下补充一个 `emoji` 项，下面写入emoji的地址即可，例如：```yaml blog/_config.stellar.ymlcomments: service: waline waline: \tserverURL: 上一步获得的DOMAINS地址 \temoji: - https://xxx/blobs - https://xxx/qq ```官方有表情预设，如果嫌加载慢的话也可以上传到自己的图床，改一下上面引用的地址即可。如果需要创建自己的预设可以参考这里。2、自定义文章反应文章反应是类似于点赞的互动，在 `blog/config.stellar.yml` 里的 `comment.waline.reaction` 下键入你自定义的反应表情图片地址即可。默认的反应标题为“你认为这篇文章怎么样？”，可在 `comment.waline.locale` 自定义，其中 `reactionTitle:` 为反应标题。如果需要给每一个反应表情加入文字描述，只需新增 `reaction0` 、`reaction1` 、`reaction2` ……例如：```yaml blog/_config.stellar.ymlcomments: waline: serverURL: 上一步获得的DOMAINS地址 locale: #自定义反应标题。如果像我一样不想要反应标题，可以在这一项里留空。 reactionTitle: #反应表情的文章描述 reaction0: 爱你哟 reaction1: oh~~ reaction2: 嘚瑟~ reaction3: 无语 #反应表情组 reaction: - https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png - https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png - https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png - https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png```Waline最多支持9个反应，可以小于9个但不能多。每个页面的反应计数是独立的，互不干扰。3、评论框默认文字先感谢@是非题大佬，这项自定义我找半天没都没找到如图所示，我在评论框里写了一句提醒“评论时填写邮箱，或者注册并登录后评论，即可在第一时间收到消息提醒。”这句话默认是“欢迎评论”，而我们要自定义它的话是在 `_config.stellar.yml` 里的 `comments.waline.locale.placeholder` 下写入你想放的内容即可。以下是我 `blog/_config.stellar.yml` 里关于评论板块的完整代码以供参考：```yaml blog/_config.stellar.ymlcomments: service: waline waline: serverURL: https://waline.skyreeves.cn locale: placeholder: 评论时填写邮箱，或者注册并登录后评论，即可在第一时间收到消息提醒。 reactionTitle: emoji: - https://xxx/blobs - https://xxx/qq meta: - nick - mail - link reaction: - https://xxx/1.png - https://xxx/2.png - https://xxx/3.png```七、自定义配色配色从客制化里独立出来是因为控制它们的文件不同，Stellar主题关于Waline的自定义配色文件路径如下：`blog/themes/stellar/source/css/_plugins/comments/waline.styl `根据所需更改色值即可> 推荐使用visual studio编辑文件，可以安装一个 `stylus` 扩展，它能直接显示色值所指的颜色，在编辑的时候更直观八、关于魔法如果不使用魔法，托管在Vercel上的Waline版块在国内是加载不出来的，为了避免魔法部介入调查，我们可以将Vercel伪装成麻瓜。详情请查看评论板块加载失败的问题九、参考Waline快速上手","tags":["hexo","Waline","Vercel"]},{"title":"hexo博客绑定域名与安装SSL证书","path":"/post/4d89caeb.html","content":"前言利用hexo和Github搭建好博客站点后，默认域名为Github下的二级域名，本文以name.com购买的域名为例，指引萌新绑定自己的域名并部署SSL证书。一、购买域名域名商地址name.com注册 - 查询域名 - 加入购物车 - 提交并付款二、解析域名1、name.com设置 购买好域名之后点击name首页右上角的**我的域**会看到你所拥有的所有域名 选择需要绑定到hexo博客的域名 在**Advanced Security**里点击**管理DNS记录** 添加两条解析记录 类型均选择 **CNAME** 一条主机填写```bash@```另一条主机填写```bashwww```回答均填写你hexo博客的Github二级域名TTL为默认3002、Github设置在hexo博客所在仓页面点击**Settings**点击左侧的**Pages**在右侧的**Custom domain**里填写你购买的域名并点击**Save**保存3、博客本地文件在你博客根目录下的**source**文件夹里新建一个文本文档将你的域名写进去并保存重命名为**CNAME**#这个文件没有后缀名三、重新部署在终端里依次执行：```bash#清理hexo缓存hexo clean``````bash#生成静态网页hexo g``````bash#部署到Githubhexo d```至此，就可以通过自己的域名访问博客啦四、SSL证书没有SSL证书的话，我们只能通过HTTP协议访问网站，现在浏览器也会温馨地提醒你不安全 color:red，而使用加密数据传输HTTPS协议需要SSL证书。现在以阿里免费的SSL为例，给hexo博客加把锁。1、购买SSL证书虽然是“购买”，实则是0元购！打开阿里云SSL证书页面，点击**证书管理控制台**左侧选择**SSL**，右侧选择**免费证书** - **立即购买**购买数量选**20**，勾选**云盾证书服务服务协议**2、创建你域名的SSL证书回到SSL证书 - 免费证书，点击**创建证书**再选择**证书申请**填入你需要绑定SSL证书的域名如果域名是在阿里云购买的，域名验证方式就选**自动DNS验证**否则选择**手动DNS验证**没有联系人的话先新建一个联系人CSR生成方式为**系统生成**，然后下一步如果是手动DNS验证，那根据所给的信息去域名管理商那里新增一个DNS记录然后点**验证**如果是自动DNS验证，那这一步就不用管点**提交审核**接下来等发证书就好获得证书后在证书管理页的证书状态会显示为已签发 color:dark3、HTTPS协议访问回到Github，在hexo博客所在仓页面点击**Settings**点击左侧的**Pages**在右侧的勾选**Enfocee HTTPS**好了，现在访问自己的博客会发现网站是以https://开头的以前的“不安全”已经变成了一把锁","tags":["hexo","域名","name.com","SSL"]},{"title":"如何利用 Github 搭建自己的免费图床","path":"/post/b9761c15.html","content":"1. *前言*对于写博客的朋友们来讲，图床这个东西一定不会陌生，而且在一定程度上也给大家造成过一定困扰。对于不清楚这个东西的朋友，我就在这儿大概说一下图床是个啥东西所谓图床，其实可以就相当于我们手机上的相册，不过他是在线的，而且是对大家开放的，大家都可以访问查看，但是编辑删除这些功能仅限于拥有者，就相当于用百度云分享的公开照片，你可以查看，也可以下载下来编辑，但是拥有权还是属于分享者。那你可能会疑惑，那这个东西和写博客的我们有啥关系呢？你想想，我们写博客，是不是有很多图片需要插入，我们这些博客要保留在本地的时候你可以预览到图片，但一旦你要把它发布到网上，这时候问题来了！发现图片上传失败，那是因为你本地的图片都是存在本地的，平台不会自动给你上传，那这个时候就凸显出图床的重要性了。当然了，如果你是直接在平台进行编辑，那着一点就不用担心了，基本平台都会自动给你上传到它自己的服务器。有了图床，我们在本地写好博客之后，就能够任意复制到其他平台，不用担心图片丢失问题了。今天的文章就是给大家分享一个搭建免费图床的教程，既是方便自己后续的复习，也希望对大家也有所帮助。*2. 准备工作*那么在正式开始之前，你需要提前准备以下东西：> 一个 Github 账号好了，就这么简单，只要你有一个 Github 账号就够了，你就能拥有一个免费的图床了，如果你还没有，那赶紧去 注册 一个账号吧。*3. 搭建过程*这一部分就是正式开始大家过程了，准备好大干一场吧！1. 登录你的 Github 之后，创建一个新的仓库；1. 填写仓库先关资料，一般只需要选一个合适的仓库名，然后确保仓库为 `public` 其他的保持默认就好；1. 一般创建成功之后，会出现如下界面，至此，我们的图床算是创建好了，接下来就是如何上传图片了；*4. 上传图片*通过上面的步骤，我们的图床时搭建好了，但是通过传统的方法向 Github 上传图片太麻烦了，这里我们推荐使用一个开源图床工具 PicGo 来作为我们的图片上传工具；PicGo 的安装就不说了，去他的 官网 下载对应版本进行安装即可，我们主要讲讲如何用它来上传图片。安装后，打开软件其主页面如下：接下来就是配置 PicGo 的过程了。首先，我们先要去 Github 创建一个 token；以此打开 `Settings -> Developer settings -> Personal access tokens`，最后点击 `generate new token`；填写及勾选相关信息，然后点击 `Genetate token` 即可；`token` 生成，注意它只会显示一次，所以你最好把它复制下来到你的备忘录存好，方便下次使用，否则下次有需要重新新建；配置 PicGo，依次打开 图床设置 -> Github 图床；填写相关信息，最后点击 `确定`即可，要将其作为默认图床的话，点击设为默认图床；> 下图中自定义域名直接安装第5步设置>> 但改用'fastly'的二级域名>> 格式如下：`https://fastly.jsdelivr.net/gh/GithubID/仓库名`上传图片，通过上传区上传即可（Ctrl V 或者将图片拖拽都可以），也可以通过快捷键的方式上传（默认上传键为 `Ctrl + Shift + P`）；*5. 加速访问*大家可能会发现，我们上传到 Github 的图片有时候访问太慢了，有时候甚至直接加载不出来！那该咋办呢？这时候我们就可以用 jsDelivr 进行免费加速，而设置的方法也很简单，只需要在我们 PicGo 图床配置中添加如下自定义域名即可；> ```> https://cdn.jsdelivr.net/gh/用户名/仓库名> ```比如我的就是 `https://cdn.jsdelivr.net/gh/cunyu1943/blog-imgs`*6. 图床推荐*除开用 Github 搭建的方式之后，我们也可以用 Gitee 进行搭建，搭建方式和本文大致相同。此外，我也推荐几个免费的图床给大家，大家可以根据自己的喜好进行选择；1. 路过图床2. SM.MS3. Imgur*7. 总结*至此，我们的搭建免费图床的教程就到此结束了，总结一下主要有如下几部分：1. 准备一个 Github 账号；2. 搭建图床仓库；3. 上传图片设置；4. 加速访问；5. 免费图床推荐；原文连接：https://zhuanlan.zhihu.com/p/347342082","tags":["Github","图床"]},{"title":"M1 Macbook Ps2022 可使用的coolorus插件","path":"/post/5fad3cf5.html","content":"前言Coolorus是一个Photoshop的色环插件，它将在PS软件中增加一个实用的色环，点击图像的某个位置，可以立即获取该点的RGB、HSV、LAB等色值，还可以通过滑块模式或者混合器模式，进一步调整色彩。一、安装coolorus点击此处下载coolorus2.6.0并安装二、签署命令根据PS对应版本选择命令拷贝到终端回车即可签署成功CC 2019 defaults write com.adobe.CSXS.9 PlayerDebugMode 1CC 2020 defaults write com.adobe.CSXS.9 PlayerDebugMode 1CC 2021 defaults write com.adobe.CSXS.10 PlayerDebugMode 1CC 2022 defaults write com.adobe.CSXS.11 PlayerDebugMode 1以2022版本为例：三、使用Rosetta打开Ps进入 /应用程序/Adobe Photoshop 2022右键Adobe Photoshop 2022.app 显示简介勾选**使用Rosetta打开**四、coolorus的使用教程打开ps2022窗口 - 扩展（旧版）-  Coolorus2.6点击Coolorus插件窗口右上角，选择设置点击减号 ➖ 1、左上角大圆 代表当前选择的颜色 即前景色；2、左上角大圆右边小圆 代表背景色；3、左上角大圆下方的黑白 点击它可以恢复默认的黑白前后景色；4、左上角大圆右上方箭头 点击它可以让前后景色对调；5、左下角上圆 用圆形取色器；6、左下角下圆 用方形取色器(和PS默认的取色器一样)；7、中间大圆环 是一条360度的色相轮；8、中间三角 往上移是加亮度 往下移是减亮度 往右移则是增加饱和度(左边则是降低饱和度) 免费获取最新摄影、影视、PS、LR及、滤镜、预设等资源请关注微信公众号：摄影资料库；9、中间上方以及右上方有六个圆形按钮 代表六种取色模式； 第一种是单色取色方式 另五种都是两种或两种以上颜色的取色方式(配色方式)； 第二种是对比色取色方式(颜色间的跨度180度 不可调节) 中间大圆环上出现两个取色点，先点击其中一个 再从三角形里调整亮度/饱和度。可用于对比色配色方式(如黄对蓝 红对青等)； 第三种是三分色取色方式(颜色间的跨度是90-175度 可以调节跨度)，可用于近似色配色和类比色配色(如红配蓝绿 红配青蓝等)； 第四种是四分色(颜色间的跨度是从5-90度 可调节)主吸色对比两个点 辅助吸色对比两个点，可用于四分色或类比色(如红青绿紫 红黄青蓝等) 第五种是三分色(颜色间的跨度也只有5-90度 可调节)，可用于近似色配色(如紫-粉-紫蓝 橙-黄-绿等)； 第六种是四分色 主吸色对比两个点不可变 跨度为180，辅助吸色对比两个点从主吸色点计算是5-90度。 以上几种配色方式 注意色相轮上面的取色点 有个较大的是主吸色点 移动它其他的辅助吸色点也会一起跟着变化，如果主吸色点180度位置也有一个点(即同一根线) 则移动这个点 效果如同移动主吸色点。","tags":["coolorus","M1"]},{"title":"ubuntu搭建僵尸毁灭工程专用服务器","path":"/post/45c5bddd.html","content":"作者使用的是系统及配置是 Ubuntu 20.04 64位2核4G内存40G硬盘空间本文适合有ubuntu基础操作的读者观看，如果没有基础的话会有点难。一、开放端口首先开放端口在服务器运营商管理页面开放，如果还安装了宝塔之类的还需要到宝塔里面再开一次端口。如果是自己的电脑并且拥有外网IP的话则在路由器里开放端口,并设置当前计算机的内网IP和mac绑定，并且设置当前电脑为dmz主机即可开放 **16261**的**UDP**端口以及开放的**8766**的**TCP**端口二、环境配置1.添加源进入/etc/apt/sources.list文件夹 下一行添加deb http://cz.archive.ubuntu.com/ubuntu impish main然后保存2.更新软件信息sudo apt update -y3.安装所需的库sudo apt-get install libsdl2-2.0 -ysudo apt install lib32stdc++6 -ysudo apt nohup -y安装这条命令的时候选择yes和oksudo apt install libsdl2-2.0-0然后切换到root用户,并输入root密码.sudo su4.安装steamcmd创建steamcmd文件夹并进入mkdir /usr/local/steamcmd&&cd /usr/local/steamcmd/下载steamcmd并且解压wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gztar -zxvf steamcmd_linux.tar.gz执行脚本安装steam控制台,安装完毕后会自动进入steam控制台./steamcmd.sh输入你的steam的账户密码，如果有令牌的话再输入令牌就可以了。假设我的账户是qwer 密码是123456，那么就输入login qwer 123456然后按回车如果提示```bashTwo-factor code: ```代表需要令牌，这时你输入你的令牌再回车就可以了如果进入控制台后提示```bashfailed to init SDL thread priority manager: SDL not found，```直接无视即可，不影响账户密码的输入以及令牌的输入三、安装游戏到服务器1.下载僵尸毁灭工程游戏客户端到服务器登陆完毕之后执行以下命令下载游戏的服务端app_update 380870 validate下载完成后输入exit退出2. 启动服务进入服务端文件夹cd ~/Steam/steamapps/common/Project\\ Zomboid\\ Dedicated\\ Server/执行脚本./start-server.sh提示```bash Enter new administrator password:```这里我们设置一个服务器的密码然后再输入一遍密码这个时候他就运行成功了等到它运行成功后我们可以使用ctrl+c退出然后执行nohup ./start-server.sh &这个命令的目的是后台执行，防止我们终端关闭后服务器也关闭。原文链接：https://blog.csdn.net/weixin_42608885/article/details/122726088","tags":["ubuntu","僵尸毁灭工程","project zomboid"]},{"title":"ubuntu搭建饥荒专用服务器","path":"/post/18ff0cb2.html","content":"前言为方便各位小伙伴挨饿，弄了一个**dst-admin**的开源项目，方便小伙伴搭建服务器。 本教程主要介绍的是如何安装**dst-admin**饥荒管理平台，使用他来快速的部署和管理饥荒。参考地址：https://github.com/qinming99/dst-admin；docker版本部署请参考：点击查看环境要求1.Ubuntu服务器一台，**Ubuntu 16.04 18.04**已经测试，**20**版本的不行注意，其他操作系统请使用**docker**版本2.Java环境**jdk1.8**3.需要用到的工具 **dst-admin.jar** 安装包，shell连接工具，推荐使用国产的 **FinalShell** 下载地址安装步骤：1.在腾讯云控制台修改服务器防火墙，开放端口> 为减少一些不必要的麻烦，建议开放所有端口，包括了入站和出站> 腾讯云服务器安全组开放端口教程：点击查看> 阿里云服务器安全组开放端口教程：点击查看2.Ubuntu安装jdk1.8先使用shell连接工具连接到服务器，执行以下命令，安装openjdk```bash#更新软件源sudo apt-get update#安装openJDK1.8sudo apt-get install -y openjdk-8-jdk#查看版本java -version显示 \"openjdk version \"1.8.0_252\"就表示安装完成```3.下载最新版的dst-admin.jar安装包 下载地址```bash#进入到home目录cd ~#下载安装包wget http://clouddn.tugos.cn/release/dst-admin-1.4.0.jar -O dst-admin.jar```4.启动dst-admin```bashjava -jar dst-admin.jar```出现了*Completed initialization*表示启动成功，按⌘ + C键结束进程5.安装饥荒客户端启动完成的dst-admin将释放两个脚本：install.sh 用于安装客户端 ,dstStart.sh 用于管理饥荒管理平台```bash#执行安装饥荒客户端安装程序,期间可能需要输入密码，这一步必须执行成功 ./install.sh```6.重启dst-admin执行管理脚本dstStart.sh，注意jar包的名称必须为dst-admin.jar不然找到文件```bash#执行管理脚本./dstStart.sh```输入3重启服务**安装完成此时我们就可以登陆到我们的饥荒管理平台对服务器进行管理了**服务器管理1.登陆饥荒管理后台设置自己的服务器在浏览器输入我们的访问地址登陆管理后台，地址为服务器的公网IP（云服务都有提供），加端口号，即：http://xx.xx.xx.xx:8080，输入用户名admin 密码123456 即可登陆，登陆成功开始设置服务器2.点击平台的向导菜单，查看教程3.设置房间拿到自己的Token，地面设置，洞穴设置，MOD设置，一步步往下，点击生成新世界按钮，我们的服务器创建成功了> 在首页我们可以更新服务器，开启关闭服务器，还可以备份一下游戏进度，可以用于下次来玩，我们可以选择一个备份的存档恢复连接服务器在我们搜索不到服务器时，可以使用IP直接连接服务器，在饥荒联机版调出控制台 按 ~ 键调出控制台，输入c_connect(“xx.xx.xx.xx”) xx.xx.xx.xx表示IP地址，就可以直连我们的服务器了！直连命令c_connect(“ip”,端口,“密码”)，这里的端口是10999或者10998，密码为空就填写空串> 内存小的服务器可以**开启swap**虚拟内存点击查看教程原文链接：https://blog.csdn.net/qq_33505611/article/details/109107216","tags":["ubuntu","饥荒","don't starve"]},{"title":"Mac使用hexo+github搭建个人博客","path":"/post/53f02396.html","content":"一、什么是hexo？Hexo 是一个快速、简洁且高效的博客框架，使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。二、安装hexo1、安装前提(已安装请跳过)安装Homebrew（Mac的Homebrew类似centos的yum和ubuntu的apt-get）```bash/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"```安装git```Bashbrew install git```安装node```bashbrew install node```2、安装hexo```bashnpm install -g hexo-cli```三、使用hexo建站使用以下命令创建一个站点，该命令会在当前目录下创建一个叫`hexotest`的文件夹(你可以改成你想要的名字)，文件夹里的文件就是网站的文件：```bashhexo init hexotest````hexotest`文件夹生成之后，用`cd`命令进入该文件夹```bashcd hexotest```然后执行以下命令安装一些依赖包：```bashnpm install```生成静态网站文件（比原来多了一个public文件夹，静态网站文件就在该文件夹中，该命令必须在`hexotest`目录下执行）：```bashhexo generate```如果你是nginx党，那直接配置个nginx到public目录就可以在本地访问：```bashserver { listen 80; server_name www.hexotest.com; root /Users/bruce/www/personal/hexotest/public; index index.html; access_log /usr/local/var/log/nginx/www.hexotest.com.access.log; error_log /usr/local/var/log/nginx/www.hexotest.com.error.log; location / { try_files $uri $uri/ /index.html; }}```当然也可以安装hexo服务器（在hexotest目录下执行）：```bashnpm install hexo-server --save```启动服务（默认端口是4000，如果该端口被其他程序占用，你可以用-p指定其他端口）```bashhexo server```用浏览器访问 http://localhost:4000 即可，用⌘ + D终止四、配置github1、注册github如果你没有github账号，先去注册一个 点我去注册github，注册github很简单，这里就不再赘述，实在不懂网搜一搜大把教程。2、创建仓库点击右上角`+`号，然后点击`New repository`：填写Repository name(即仓库名)，名称规则为：用户名.github.io，比如我的就是xiebruce.github.io：创建成功，访问试试：3、在github上添加公钥(添加过的请跳过)点击github右上角头像→`Settings`：点击`SSH and GPG keys`，然后点击`New SSH key`：回到终端，执行以下命令查看你电脑中是否已创建过公/私钥，如果`id_rsa`、`id_rsa.pub`两个文件，说明以前已经创建过（该命令可以在任意目录下执行）。```bashls -l ~/.ssh```如果未创建过，则执行以下命令创建公/私钥（不用管提示，闭着眼睛敲回车就行，直到没有东西输出，该命令可以在任意目录下执行）：```shellssh-keygen -t rsa```然后再次使用上面第1步说的命令查看，正常情况下应该会有这两个文件了`id_rsa`、`id_rsa.pub`（该命令可以在任意目录下执行）```shellls -l ~/.ssh```执行下面的命令输出你的公钥（该命令可以在任意目录下执行）```shellcat ~/.ssh/id_rsa.pub```把公钥复制→粘贴到刚才github那个界面的`key`里，title随便输入一个你喜欢的，因为这个是用于博客的，所以title你可以写`blog`（或者写`Mac-bog`），最后点击`Add SSH key`按钮把这个key添加进去：需要输入密码来确认添加添加成功回到终端，执行以下命令检测能否成功连接github（该命令可以在任意目录下执行）：```shellssh -T git@github.com```如果输出的是：Hi XXX! You’ve successfully authenticated, but GitHub does not provide shell access.（其中XXX是你的github用户名），那么说明连接github成功（这样就可以用命令把刚刚生成的hexo文件发布到github上）。4、修改配置文件并部署在生成的网站目录中找到_config.xml，打开它：滚动到最后，找到 #`Deployment`：```bash# DeploymentDocs: https://hexo.io/docs/one-command-deploymentdeploy: type: ```把它改成这样（其中repository的值不用自己写，往下看）：```bash# DeploymentDocs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repository: git@github.com:你github的ID/你github的ID.github.io.git branch: main```安装布署插件（注意该命令必须在网站目录下执行，比如我的网站叫`hexotest`，那我就得cd到这个目录下，然后再执行下面的命令）```shellnpm install hexo-deployer-git --save```把网站上传到github（注意该命令必须在网站目录下执行）：```shellhexo generate --deploy```上传(也叫部署)过程显示的信息：刷新你的github看看，已经多了很多文件最后，访问你的博客试试吧，还记得网址吗？不记得？看下面，这个就是你的博客地址：博客最终效果：五、更换主题1、挑选主题觉得刚才那个界面样式不好看？没关系，可以换一个（当然你也可以自己写），进入hexo官网主题页面：https://hexo.io/themes比如我觉得这个叫`Aloha`的不错，那就点击这个主题名称（注意是点主题名称，不是点图片，点图片是预览这个博客的样式，点名称是进入它的仓库）进入这个主题的仓库后，获取仓库地址：2、下载主题在主题目录下执行该命令，比如我的就是在`hexotest/themes`目录下执行：```shellgit clone https://github.com/henryhuang/hexo-theme-aloha.git```3、在配置文件中指定新主题在_config.xml文件的中，搜索`theme`，找到如下位置：```bash# ExtensionsPlugins: https://hexo.io/plugins/Themes: https://hexo.io/themes/theme: landscape```很明显，把原来的`landscape`换成新的`hexo-theme-aloha`即可：```bash# ExtensionsPlugins: https://hexo.io/plugins/Themes: https://hexo.io/themes/theme: hexo-theme-aloha```4、清空缓存并发布新主题清除原来生成的静态网页文件：```shellhexo clean```最后执行前面用过的命令，生成新的静态网页文件并上传到github：```shellhexo generate --deploy```刷新博客，看是不是变了（只不过博客还没有内容，所以只有一条默认的Hello World）：六、开始写博客博客有三种布局(layout)，`文章`/`单页`/`草稿`，分别叫做`post`/`page`/`draft`。新建一篇博客的语法格式（中括号括住的表示可以有，也可以不写，不写默认为`post`,当然你也可以在_config.yml配置文件中设置成其它，冒号要用英文冒号）：```shellhexo new [布局] \"文章标题\"```新建文章，注意，布局没有写就默认是`post`，即文章。```shelllhexo new \"这是一篇测试文章\"```新建单页```shelllhexo new page \"这是一个测试单页\"```新建草稿```shelllhexo new draft \"这是一篇测试草稿\"```新建的文件在`hexotest/source` 目录下对应的目录中：推荐使用Markdown编辑器 typora 进行写作，你可以用typera打开整个项目，然后找到对应建好的文件进行写作：写完还是用这个命令来发布：```shellhexo generate --deploy```具体怎么写，请参考官方文档：https://hexo.io/zh-cn/docs/writing原文链接：https://www.xiebruce.top/595.html","tags":["hexo","Mac"]},{"title":"Mac安装Homebrew","path":"/post/5c387244.html","content":"Homebrew 是什么Homebrew是 mac的包管理器，仅需执行相应的命令,就能下载安装需要的软件包，可以省掉自己去下载、解压、拖拽(安装)等繁琐的步骤。 比如安装服务器 nginx，打开终端执行以下命令即可安装:```javascriptbrew install nginx```>  Homebrew 官方文档 https://brew.sh/ Homebrew 怎么安装方法一：brew官网的安装脚本执行命令：```javascript/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"```这时很可能会出现一个问题: 要么下载极其龟速，要么直接出现如下提示```javascriptcurl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused```>  原因：这是 http://raw.githubusercontent.com 访问不稳定引起的。此时需要换一种科学高效的安装方法，即方法二。 方法二：brew 镜像安装脚本（亲测最快速最有效）```javascript/usr/bin/ruby -e \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)\"```>  该脚本用了中科大镜像加速访问，仅修改仓库地址部分，不会产生安全隐患。 关于中科大所提供的 Homebrew 镜像服务 https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git 注：注意这里的速度，几百kib/s或几m/s才是正常的。若只有几kib/s，通常为无效的安装方法，一般加载了百分之几十后就会报错。 Homebrew 安装时如何避坑1.若出现 Error: Checksum mismatch.报错代码如下：```javascriptcurl: (56) LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54Error: Checksum mismatch.Expected: b065e5e3783954f3e65d8d3a6377ca51649bfcfa21b356b0dd70490f74c6bd86Actual: e8a348fe5d5c2b966bab84052062f0317944122dea5fdfdc84ac6d0bd513c137Archive: /Users/joyce/Library/Caches/Homebrew/portable-ruby-2.6.3_2.yosemite.bottle.tar.gzTo retry an incomplete download, remove the file above.Error: Failed to install Homebrew Portable Ruby (and your system version is too old)!Failed during: /usr/local/bin/brew update --force```这里是由Homebrew目录下的portable-ruby-2.6.3_2.yosemite.bottle.tar.gz文件引起的安装中断，只需要到上面对应的路径里，删掉这个文件，重新执行安装命令即可：```javascript/usr/bin/ruby -e \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)\"``` 2.若卡在了Cloning into... 由这里的龟速可断定卡住了，立马用Control + C中断脚本，然后执行以下命令：```javascriptcd \"$(brew --repo)/Library/Taps/\"mkdir homebrew && cd homebrewgit clone git://mirrors.ustc.edu.cn/homebrew-core.git```执行后可看到： 速度立马快得飞起，一下子就能装好。注：最后出现 Installation successful! 或者 Checking out files: 100% (5392/5392), done. 说明安装成功。Homebrew安装完为何需要配置前面已经提到，Homebrew通常用来下载软件的，但它在安装软件时非常慢。为了提升安装速度，需要更改 Homebrew 的安装源，将其替换成国内镜像。这里用的是由中科大负责托管维护的 Homebrew 镜像。其中，前两个为必须配置的项目，后两个可按需配置。1.必备设置- 替换 brew.git：```javascriptgit -C \"$(brew --repo)\" remote set-url origin https://mirrors.ustc.edu.cn/brew.git```- 替换 homebrew-core.git：```javascriptgit -C \"$(brew --repo homebrew/core)\" remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git``` 2.按需设置- 替换 homebrew-cask.git：```javascriptgit -C \"$(brew --repo homebrew/cask)\" remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git```- 替换homebrew-bottles：首先要先区分你的mac用哪种终端工具，如果是 bash，则执行：```javascriptecho 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.bash_profilesource ~/.bash_profile```若是 zsh，则执行：```javascriptecho 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.zshrcsource ~/.zshrc```注：Homebrew 主要由四个部分组成: brew、homebrew-core 、homebrew-cask、homebrew-bottles，它们对应的功能如下： 组成  功能  :---------------  :----------------------------------  Homebrew  源代码仓库  homebrew-core  Homebrew 核心源  homebrew-cask  提供macos应用和大型二进制文件的安装  homebrew-bottles  预编译二进制软件包 Homebrew 基本用法有哪些```javascript// 查询：brew search 软件名// 安装：brew install 软件名// 卸载：brew uninstall 软件名// 更新 Homebrew：brew update // 查看 Homebrew 配置信息：brew config ```注：使用官方脚本同样会遇到uninstall地址无法访问问题，可以替换为下面脚本：```javascript/usr/bin/ruby -e \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/uninstall)\"```> 参考文章>> mac下镜像飞速安装Homebrew教程>> 科大Homebrew源>> 写在最后>> 在此之前试过了好几种安装方法，比如下载一个 brew_install.rb的文件，然后执行命令ruby brew_install.rb，一开始行得通，但下载到中途就会报错，而且出错的方法不一，也尝试过好几种相应的解决方法，最终都夭折了，只有这个镜像安装才能成功，而且下载速度非常快。原文链接：https://cloud.tencent.com/developer/article/1853162","tags":["Mac","brew"]},{"title":"Hello World","path":"/post/4a17b156.html","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)"},{"path":"/about/index.html","content":"简介本站是@SkyReeves的个人站点，博主爱好**摩托**、**冲浪**、**摄影**、**游戏**，计算机方面是个纯小白，不懂任何开发语言，无意中看到一篇名为Mac使用hexo+github搭建个人博客的文章，一时兴起搭了这个站。除了偶尔发布一些奇思幻想以外，主要记录博主所用到的各类教程，部分转载，部分根据自身实践撰写。 时光机 2022.10.26- 将图床的临时域名更改为img的二级域名- 通过ICP备案 2022.10.17在便笺页面新增博主游戏推荐，会佛系更新 2022.10.09在大佬@xaoxuu 的帮助下成功添加便笺页面 2022.10.02- 留言板加了消息提醒，tg怎么都不给我推送提醒，改用微信好使了- 把表情包也搬到了七牛，本地预览没问题，但是重新部署后表情按钮消失，重新使用Github上的表情仓又正常了，太谜了- 用Github图床还是不好使，图床搬到了七牛云- 用vercel加速了站点，现在看起来还不错 2022.10.01- 留言板加了一组自定义表情包- 读了waline的文档发现留言板透明是因为我使用的Stellar主题默认是暗夜模式，我将主题改亮之后没有取消waline的暗夜模式- 想添加一个便签板块，页面怎么也没调好，算了不加了，毁灭吧- 新增了个可以动的背景 2022.09.30- 新增了一个留言板，看起来也没啥用，并且为什么它是透明的，简直反人类- 添加此关于页面- 新增可互动的副标题- 在大佬@shixiaocaia 的帮助下新增页面标签图标 2022.09.29- 搞了个图床- 以最不推荐的方式更换成Stellar主题，主要是其他方式不会，说fork到博客的仓库下作为子板块，fork后就整不明白了- 以前我有个com的域名，过期了没续，被别人注册了，于是购买了cn的域名给本站用上 2022.09.28路遇种种艰难，折腾到半夜，转载+美化了第一篇博客，一看已经来到了28号 2022.09.27看到hexo建站教程，一时兴起做出了这个玩意儿"},{"path":"/css/scrollbar.css","content":"/* 滚动条整体部分 */\n::-webkit-scrollbar {\n\twidth: 5px;\n\theight: 8px;\n  }\n  \n/* 外层轨道 */\n  ::-webkit-scrollbar-track {\n\tbackground-color: rgba(200,155,155,0);\n\tborder-radius: 2em;\n  }\n\n/* 滚动条可以拖动的那部分 */\n  ::-webkit-scrollbar-thumb {\n\tbackground-color: #1ACDFC !important; //滚动条颜色设置\n\tbackground-image: -webkit-linear-gradient(\n\t  45deg,\n\t  rgba(255, 255, 255, 0.4) 25%,\n\t  transparent 25%,\n\t  transparent 50%,\n\t  rgba(255, 255, 255, 0.4) 50%,\n\t  rgba(255, 255, 255, 0.4) 75%,\n\t  transparent 75%,\n\t  transparent\n\t) !important;\n\tborder-radius: 2em;\n  }"},{"path":"/friends/index.html","content":"**特别感谢**感谢大佬们对此站建设的帮助小幸运小圈圈 星日语 是非题 XAOXUU Autjuly Felix Chen MerryJingle 第一步：新建 Issue新建GitHub Issue按照模板格式填写并提交。为了提高图片加载速度，建议优化头像：1. 打开压缩图上传自己的头像，将图片尺寸调整到 `96px` 后下载。2. 将压缩后的图片上传到去不图床并使用此图片链接作为头像。 第二步：添加友链并等待管理员审核请添加本站到您的友链中，如果您也使用 issue 作为友链源，只需要告知您的友链源仓库即可。title: SkyReevesavatar: https://img.skyreeves.cn/main/avatar96.gifurl: https://skyreeves.cn/screenshot: https://img.skyreeves.cn/sites/截屏2022-11-07-19.23.28.pngdescription: 垫脚石记号待管理员添加 active color:green 标签后即可生效。如果您需要更新自己的友链，请直接修改 issue 内容，大约 3 分钟内生效，无需等待博客更新。如果无法修改，可以重新创建一个。"},{"title":"常用的站点","path":"/notes/index.html","content":"GeeksMac 应用下载设计与视觉电影时光"},{"title":"博主游玩推荐","path":"/notes/Gamer/index.html","content":"FPS & TPS逃离塔科夫> 相对慢节奏的第一人称射击游戏，游戏风格自成一派。最吸引我的是这个游戏优秀的完全与现实世界相同的枪械系统，但凡是个枪迷都会对这款游戏爱不释手。目前游戏仍处于测试阶段，正式版将会登录Steam。推荐指数：★★★★★★ color:red《逃离塔科夫》是由俄罗斯Battlestate公司制作的一款硬核仿真军事题材的第一人称射击游戏，在传统的FPS基础上还加入了RPG元素，游戏中玩家需要加入两股军事势力中的一股，之后对游戏中的神秘城市塔科夫进行探索和调查，直至最后寻找到逃离该地区的途径。并有一条主线故事可推动游戏发展。人渣推荐指数：★★★★☆ color:red《SCUM》旨在为多人开放世界生存游戏引入前所未有的角色定制、控制方式和游戏进程。在这里，唯有知识与技能才是助你长久存活的终极武器。融合了硬核生存游戏中各种规划和管理等元素，同时加入了玩家随时可参与的支线PvP“线上活动”，SCUM在复杂的生存模拟和激烈的动作元素中取得了微妙的平衡，为玩家献上一款新世代生存游戏。动作类艾尔登法环推荐指数：★★★★☆ color:red艾尔登法环是以正统黑暗奇幻世界为舞台的动作RPG游戏。 走进辽阔的场景与地下迷宫探索未知，挑战困难重重的险境，享受克服困境时的成就感吧。 不仅如此，登场角色之间的利害关系谱成的群像剧，更是不容错过。只狼：影度二逝 Sekiro™: Shadows Die Twice推荐指数：★★★★☆ color:red艾进入由打造了《黑暗之魂》系列的知名开发商FromSoftware倾力制作的全新冒险，用智慧和力量斩开复仇之路。 决死复仇，夺回荣誉，智杀强敌。Assassin's Creed® Odyssey推荐指数：★★★★☆ color:red 在《Assassin's Creed® Odyssey》当中主宰自己的命运。 从一名流浪者蜕变成传奇人物，踏上这趟奥德赛之旅，找出你过往的秘密并改变古希腊的命运。拟真向竞速> 对外设要求较高，键鼠、手柄也能玩，但很难做出好的成绩。如果你没有方向盘建议不要尝试。神力科莎 Assetto Corsa> MOD非常成熟，不管是车辆还是地图。推荐指数：★★★★★ color:red《神力科莎 Assetto Corsa》1.16版本推出了全新镭射扫描“Laguna Seca“赛道，7款全新车型，当中包括了备受期待的阿尔法·罗密欧Giulia Quadrifoglio！请查看更新日志，获取更多信息！神力科莎：竞速 Assetto Corsa Competizione> 神力科莎的续作，在前作的基础上各方面都要显著提高，包括对配置的要求。遗憾的是本作不支持MOD推荐指数：★★★★★ color:red Assetto Corsa Competizione是最新的宝珀GT系列赛官方授权游戏。该作优异的拟真水平能让玩家感受FIA GT3系列赛的独特氛围，游戏内有官方赛车手、车队、车辆与赛道，这些内容将以高水准的精确细节呈现。娱乐向竞速极限竞速：地平线 5> 墨西哥自驾旅游观光指南。推荐指数：★★★★☆ color:red 您的终极地平线冒险正等着您展开！探索墨西哥充满活力且不断变化的开放世界景色，驾驶百辆世界级好车，享受无拘无束又有趣的驾驶体验。立即展开您的地平线冒险并将本游戏添加到您的愿望列表吧！MotoGP™22> 破宏达天下第一！GSX弯道杀狗了有没有！推荐指数：★★★★☆ color:red 发动引擎，享受最身临其境、最原汁原味的MotoGP™游戏体验，不玩不是摩托粉！ 除了MotoGP™22，从来没有一款游戏将模拟玩法与真实体验结合得如此天衣无缝！RIDE 4> 个人感觉没有MotoGP™22容易，也可能是我技术太差。推荐指数：★★★☆☆ color:red 准备好感受车迷所能享受的绝佳游戏体验了吗？ RIDE 4中数百辆的摩托车、数十条赛道和前所未有的真实感，将点燃你的竞速之魂。模拟经营饥荒联机版推荐指数：★★★☆☆ color:red 在绝不妥协的荒野生存游戏《饥荒》的多人联机版中一起战斗、耕种、建设和探索吧。缺氧推荐指数：★★★★☆ color:red 《缺氧》 是一款太空殖民模拟游戏。 在外太空岩深处，你手下的勤劳开拓者们需要熟练掌握科技，战胜新的陌生生命形式，以及利用难以置信的太空技术来生存。甚至，还有可能繁荣起来。休闲游戏雀魂麻將(MahjongSoul)推荐指数：★★★☆☆ color:red 随时随地，轻松麻将！ 精美和风立直麻将游戏——《雀魂麻将》国际中文服Steam版现已正式上线！Hacknet> 休闲类的黑客模拟器，里面涉及到的方法与指令是简化的现实版，有手就能玩。推荐指数：★★☆☆☆ color:red Hacknet是一款身历其境，基於终端的黑客模拟器。跟随一位最近过世的黑客遗留的线索探询混乱未知的网络世界。他的死可能不是媒体报导的意外那麽单纯。Grey Hack> 超级超级超级拟真的黑客攻防游戏，涉及到的知识全部源自于现实，没有计算机相关知识很难玩下去。不要在公共场所玩这个游戏，避免被误会请去喝茶。 color:red推荐指数：★★☆☆☆ color:red Grey Hack is a massively multiplayer hacking simulator game. You're a hacker with full freedom to act as you wish on a vast network of procedurally generated computers.独立游戏Death's Door推荐指数：★★★★☆ color:red 虽然每天按时打卡上班收割灵魂的工作有够单调无聊，但对于乌鸦来说这至少还算是本职工作。一切的转机发生在某一天，你被分配收割的灵魂居然被偷了！为追查这个慌不择路的窃贼，你必须前往死亡不曾涉足的领域，那里游荡的生灵早已活过了应有的寿限，内心激荡的贪婪与力量远超乌鸦们的想象。双人成行推荐指数：★★★★★ color:red 这是一款别开生面的平台冒险游戏，完全为合作模式而设计。利用好友通行证*邀请一位好友免费游玩，共同体验多种多样的乐趣，享受颠覆性的玩法挑战。扮演相互看不顺眼的科迪和小梅夫妇，这两个人被魔咒变成了玩偶。他们一起被困在一个奇幻世界里，每个角落都隐藏着意想不到的东西，他们不得不一起克服挑战，同时挽救他们破裂的关系。夜族崛起推荐指数：★★☆☆☆ color:red 经过几个世纪的沉睡，你作为一名虚弱的吸血鬼醒来。你需要寻找血液以恢复体力，同时躲避烈日以求生存。重建你的城堡和吸血鬼帝国，将人类变成你忠诚的仆人。你可以单人探索和打斗，或在线结交盟友和敌人，抵挡那些灵异的士兵，在这个充满冲突的世界战斗！碳酸危机推荐指数：★★★☆☆ color:red 《碳酸危机》是一款高机动性横版平台射击游戏。你，一个来历不明的神秘角色，身负尖端科技装备，拥有极强的战斗力，正是本次救世任务的第一人选！你将带着未知的身世之谜，突破敌人的重重炮火，去寻找并揭开隐藏在危险背后的秘密！蛇行武装推荐指数：★★☆☆☆ color:red “别开火！是友军！” 《蛇行武装》是一个另类的俯视角射击游戏，灵感来源于贪吃蛇，你需要解救你的同伴，然后与他们并肩作战。在游戏中，你和你的同伴会排成一列，向同一个地方开火，注意保持队形，因为子弹可不分敌我。游戏包含5个关卡，以及一个隐藏的模式。游戏时长大约30~45分钟。空洞骑士 Hollow Knight推荐指数：★★★★★ color:red 在《空洞骑士》中打造属于自己的冒险之旅！穿越一个庞大却废弃的属于昆虫与英雄的王国，开启史诗般的冒险旅程。探索幽深的洞穴，与被感染的生物战斗，结识友好又奇异的昆虫，整个游戏都是经典的手绘 2D 风格。Iris.Fall推荐指数：★★★☆☆ color:red 《彩虹坠入》是一款以“光与影”为核心概念，极具美术风格的解谜游戏，以强烈的黑白对比画面，结合充满想象力的剧情故事，给玩家带来一段充满惊奇的游戏体验。小小梦魇2推荐指数：★★★★★ color:red 在《小小梦魇2》的悬疑冒险旅途中，您将化身为小男孩摩诺，身处在电波笼罩之下，因此变得扭曲的世界里。 与新结交的朋友小六携手合作，揭发讯号塔暗藏的秘密。为了吾王 / For The King推荐指数：★★★☆☆ color:red 《为了吾王》是一款结合桌游和 roguelike 类型元素的跨界策略 RPG 游戏。可以单机进行单人游戏或者在线多人合作。培养你的角色，极致发挥你的战术和策略。游戏支持中文。层层梦境推荐指数：★★★☆☆ color:red 在夜晚，深入你的潜意识，探寻强大的神器来征服你的噩梦。白天，探索城市红港区，与之建立关系，开启你的梦境力量。沉睡, 死亡, 惊醒。如此循环。Beholder推荐指数：★★★☆☆ color:red 你是一名在极权社会中被政府安插的楼管。你必须监视你的租户，偷听他们的对话，并向你的上级报告他们！最重要的是，你必须还要向当局报告会密谋颠覆政府的任何人。你必须！但你会吗？The Office Quest推荐指数：★★★★★ color:red 办公室的生活日复一日，每天重复地敲打着键盘，参加着一成不变的无聊会议，穿着同样的毛绒连体睡衣。直到有一天，惊奇而魔幻的事物接踵而来。使出你的浑身解数，快快溜走吧！《The Office Quest》是为那些再也无法忍受枯燥办公室折磨的人们，专门开发的轻松幽默向点击冒险游戏。My Friend Pedro推荐指数：★★★★☆ color:red 我的朋友佩德罗是一场关于友情、幻想的血色芭蕾，讲述了一个男人如何在一个会说话的香蕉的引导下人挡杀人、佛挡杀佛。Stacklands推荐指数：★★★☆☆ color:red 《Stacklands》是一款村庄建设游戏，你可以在那里堆叠卡牌以收集食物、修建建筑、并与各种生物战斗。 例如，将“村民”卡牌拖至“浆果灌木”顶部将会生成“浆果”卡牌，村民们可以吃这些浆果卡牌来生存！🃏出好你的卡牌，扩建你的村庄！"},{"title":"站点美化","path":"/notes/站点美化/index.html","content":"本站主题自定义：便笺页面保持头像与标题常驻`logo.ejs` 第42行，沿用`1.11.0`版本的设置：```ejs themes/stellar/layout/_partial/sidebar/logo.ejs let main = proj.title  proj.wiki  page.wiki  page.title;```Waline配色```stylus themes/stellar/source/css/_plugins/comments/waline.styl /* 主题色 */--waline-theme-color: #3498db; /* $color-theme; */--waline-active-color: #2ecc71; /* $color-hover; */ /* 布局颜色 */ --waline-bgcolor: #f2f2f2; /* fff */ @media (prefers-color-scheme: auto) /* dark */.wl-count color: #666; /* #fff */```页面居中删掉第六行：```stylus themes/stellar/source/css/_layout/main.styl.l_main position: relative padding-bottom: \"calc(1 * %s)\" % var(--gap-l) @media screen and (min-width: 1400px) margin-left: \"calc(2 * %s)\" % var(--gap-l) @media screen and (min-width: $device-mobile-max) padding-top: \"calc(1 * %s)\" % var(--gap-l) header margin: 4rem 1rem 2rem .logo-wrap margin: 0```添加背景动态线条效果 在 `layout.ejs` 的`<body>`里添加代码```xml themes/stellar/layout/layout.ejs <script type=\"text/javascript\" color=\"220,220,220\" opacity='0.7' zIndex=\"-2\" count=\"200\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"> </script>```其中：- `color`：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）- `opacity`：表示线条透明度（0~1），默认：0.5 - count：表示线条的总数量，默认：150- `zIndex`：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1添加背景代码雨效果child:codeblock open:false  本站未使用新建 `DigitalRain.js`，写入以下代码：```jswindow.onload = function(){ //获取画布对象 var canvas = document.getElementById(\"canvas\"); //获取画布的上下文 var context =canvas.getContext(\"2d\"); var s = window.screen; var W = canvas.width = s.width; var H = canvas.height; //获取浏览器屏幕的宽度和高度 //var W = window.innerWidth; //var H = window.innerHeight; //设置canvas的宽度和高度 canvas.width = W; canvas.height = H; //每个文字的字体大小 var fontSize = 12; //计算列 var colunms = Math.floor(W /fontSize); //记录每列文字的y轴坐标 var drops = []; //给每一个文字初始化一个起始点的位置 for(var i=0;i<colunms;i++){ drops.push(0); } //运动的文字 var str =\"WELCOME TO WWW.ITRHX.COM\"; //4:fillText(str,x,y);原理就是去更改y的坐标位置 //绘画的函数 function draw(){ context.fillStyle = \"rgba(238,238,238,.08)\";//遮盖层 context.fillRect(0,0,W,H); //给字体设置样式 context.font = \"600 \"+fontSize+\"px  Georgia\"; //给字体添加颜色 context.fillStyle = [\"#33B5E5\", \"#0099CC\", \"#AA66CC\", \"#9933CC\", \"#99CC00\", \"#669900\", \"#FFBB33\", \"#FF8800\", \"#FF4444\", \"#CC0000\"][parseInt(Math.random() * 10)];//randColor();可以rgb,hsl, 标准色，十六进制颜色 //写入画布中 for(var i=0;i<colunms;i++){ var index = Math.floor(Math.random() * str.length); var x = i*fontSize; var y = drops[i] *fontSize; context.fillText(str[index],x,y); //如果要改变时间，肯定就是改变每次他的起点 if(y >= canvas.height && Math.random() > 0.99){ drops[i] = 0; } drops[i]++; } }; function randColor(){//随机颜色 var r = Math.floor(Math.random() * 256); var g = Math.floor(Math.random() * 256); var b = Math.floor(Math.random() * 256); return \"rgb(\"+r+\",\"+g+\",\"+b+\")\"; } draw(); setInterval(draw,35);};```在主题文件的相关css文件中（以 Material X 1.2.1 主题为例，在\\themes\\material-x-1.2.1\\source\\less\\_main.less 文件末尾）添加以下代码：```csscanvas { position: fixed; right: 0px; bottom: 0px; min-width: 100%; min-height: 100%; height: auto; width: auto; z-index: -1;}```然后在主题的 `layout.ejs` 文件中引入即可：```html <canvas id=\"canvas\" width=\"1440\" height=\"900\" ></canvas> <script type=\"text/javascript\" src=\"/js/DigitalRain.js\"></script>```"}]